version: '3.8'

services:
  postgres:
    build: .
    container_name: courses_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: courses_user
      POSTGRES_PASSWORD: courses_password
      POSTGRES_DB: courses_db
      CREATE_APP_USER: "true"
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./setup.sh:/docker-entrypoint-initdb.d/setup.sh
    networks:
      - courses_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U courses_user -d courses_db"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Веб-приложение
  webapp:
    build: ./webapp
    container_name: courses_webapp
    restart: unless-stopped
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: courses_db
      POSTGRES_USER: courses_user
      POSTGRES_PASSWORD: courses_password
      FLASK_ENV: production
      SECRET_KEY: your-secret-key-here
    ports:
      - "5000:5000"
    volumes:
      - webapp_uploads:/app/uploads
      - webapp_outputs:/app/outputs
      - webapp_logs:/app/logs
    networks:
      - courses_network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # pgAdmin для управления базой данных
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: courses_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - courses_network
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  webapp_uploads:
    driver: local
  webapp_outputs:
    driver: local
  webapp_logs:
    driver: local

networks:
  courses_network:
    driver: bridge
